# This .pyi is auto generated by the script in the root folder.
# only for cache,use .py for changes
from ptocr.config import ConfigModel,_
from ptocr.modules.backbones.resnet.rec_resnet_31 import ResNet31
from ptocr.modules.heads.sar import SARHead
from ptocr.loss.sar import SARLoss
from ptocr.metrics.rec import RecMetric
from ptocr.postprocess.rec import SARLabelDecode
from torch.optim import Adam
from ptocr.optim.lr_scheduler import PiecewiseLR
from ptocr.datasets.lmdb import LMDBDataSet
from ptocr.datasets.simple import SimpleDataSet
from ptocr.transforms.operators import DecodeImage, KeepKeys
from ptocr.transforms.label_ops import SARLabelEncode
from ptocr.transforms.rec_img_aug import SARRecResizeImg
class Model(ConfigModel):
    use_gpu = True
    epoch_num = 5
    log_window_size = 20
    log_batch_step = 20
    save_model_dir = None
    save_epoch_step = 1
    eval_batch_step = [0, 2000]
    metric_during_train = True
    pretrained_model = None
    checkpoints = None
    save_infer_dir = None
    use_visualdl = False
    character_dict_path = "ppocr/utils/dict90.txt"
    max_text_length = 30
    infer_mode = False
    use_space_char = False
    rm_symbol = True
    model_type = 'rec'
    algorithm = 'SAR'
    Transform = None
    Backbone = _(ResNet31, )
    Head = _(SARHead, )
    loss = SARLoss()
    metric = RecMetric()
    postprocessor = SARLabelDecode()
    Optimizer = _(Adam,betas=[0.9, 0.999])
    LRScheduler = _(PiecewiseLR,decay_epochs=[3, 4], values=[0.001, 0.0001, 1e-05])
    class Data:
        dataset:LMDBDataSet = SimpleDataSet
        root:"train_data/data_lmdb_release/evaluation/" = "train_data/"
    class Loader:
        shuffle:False = True
        drop_last:False = True
        batch_size = 64
        num_workers:4 = 8
        pin_memory = False
    Transforms = _[DecodeImage(img_mode="BGR", channel_first=False),SARLabelEncode():...,SARRecResizeImg(image_shape=[3, 48, 48, 160], width_downsample_ratio=0.25),KeepKeys("image","label","valid_ratio"):...]