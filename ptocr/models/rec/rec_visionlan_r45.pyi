# This .pyi is auto generated by the script in the root folder.
# only for cache,use .py for changes
from ptocr.config import ConfigModel,_
from ptocr.modules.backbones.resnet.rec_resnet_45 import ResNet45
from ptocr.modules.heads.visionlan import VLHead
from ptocr.loss.vl import VLLoss
from ptocr.metrics.rec import RecMetric
from ptocr.postprocess.rec import VLLabelDecode
from torch.optim import Adam
from ptocr.optim.lr_scheduler import PiecewiseLR
from ptocr.datasets.lmdb import LMDBDataSet
from ptocr.transforms.operators import DecodeImage, KeepKeys
from ptocr.transforms.rec_img_aug import ABINetRecAug, VLRecResizeImg
from ptocr.transforms.label_ops import VLLabelEncode
class Model(ConfigModel):
    use_gpu = True
    epoch_num = 8
    log_window_size = 200
    log_batch_step = 200
    save_model_dir = None
    save_epoch_step = 1
    eval_batch_step = [0, 2000]
    metric_during_train = True
    pretrained_model = None
    checkpoints = None
    save_infer_dir = None
    use_visualdl = True
    character_dict_path = None
    max_text_length = 25
    training_step = "LA"
    infer_mode = False
    use_space_char = False
    model_type = 'rec'
    algorithm = 'VisionLAN'
    Transform = None
    Backbone = _(ResNet45, strides=[2, 2, 2, 1, 1])
    Head = _(VLHead, n_layers=3, n_position=256, n_dim=512, max_text_length=25, training_step="LA")
    loss = VLLoss(mode="LA", weight_res=0.5, weight_mas=0.5)
    metric = RecMetric(is_filter=True)
    postprocessor = VLLabelDecode()
    Optimizer = _(Adam,betas=[0.9, 0.999], clip_norm=20.0, group_lr=True, training_step="LA")
    LRScheduler = _(PiecewiseLR,decay_epochs=[6], values=[0.0001, 1e-05])
    class Data:
        dataset = LMDBDataSet
        root:"train_data/data_lmdb_release/validation/" = "train_data/data_lmdb_release/training/"
    class Loader:
        shuffle:False = True
        drop_last:False = True
        batch_size:64 = 220
        num_workers = 4
    Transforms = _[DecodeImage(img_mode="RGB", channel_first=False),ABINetRecAug():,VLLabelEncode():...,VLRecResizeImg(image_shape=[3, 64, 256]),KeepKeys("image","label","label_res","label_sub","label_id","length"):...]