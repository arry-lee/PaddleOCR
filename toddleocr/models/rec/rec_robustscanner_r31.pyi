# This .pyi is auto generated by the script in the root folder.
# only for cache,use .py for changes
from toddleocr.config import _, ConfigModel
from toddleocr.datasets.lmdb import LMDBDataSet
from toddleocr.loss.sar import SARLoss
from toddleocr.metrics.rec import RecMetric
from toddleocr.modules.backbones.resnet.rec_resnet_31 import ResNet31
from toddleocr.modules.heads.robustscanner import RobustScannerHead
from toddleocr.optim.lr_scheduler import PiecewiseLR
from toddleocr.postprocess.rec import SARLabelDecode
from toddleocr.transforms.label_ops import SARLabelEncode
from toddleocr.transforms.operators import DecodeImage, KeepKeys
from toddleocr.transforms.rec_img_aug import RobustScannerRecResizeImg
from torch.optim import Adam

class Model(ConfigModel):
    use_gpu = True
    epoch_num = 5
    log_window_size = 20
    log_batch_step = 20
    save_model_dir = None
    save_epoch_step = 1
    eval_batch_step = [0, 2000]
    metric_during_train = True
    pretrained_model = None
    checkpoints = None
    save_infer_dir = None
    use_visualdl = False
    character_dict_path = "ppocr/utils/dict90.txt"
    max_text_length = 40
    infer_mode = False
    use_space_char = False
    rm_symbol = True
    model_type = "rec"
    algorithm = "RobustScanner"
    Transform = None
    Backbone = _(ResNet31, init_type="KaimingNormal")
    Head = _(
        RobustScannerHead,
        enc_outchannles=128,
        hybrid_dec_rnn_layers=2,
        hybrid_dec_dropout=0,
        position_dec_rnn_layers=2,
        start_idx=91,
        mask=True,
        padding_idx=92,
        encode_value=False,
        max_text_length=40,
    )
    loss = SARLoss()
    metric = RecMetric(is_filter=True)
    postprocessor = SARLabelDecode()
    Optimizer = _(Adam, betas=[0.9, 0.999])
    LRScheduler = _(PiecewiseLR, decay_epochs=[3, 4], values=[0.001, 0.0001, 1e-05])

    class Data:
        dataset = LMDBDataSet
        root: "train_data/data_lmdb_release/evaluation/" = (
            "train_data/data_lmdb_release/training/"
        )

    class Loader:
        shuffle: False = True
        drop_last: False = True
        batch_size = 64
        num_workers: 4 = 8
        pin_memory = False
    Transforms = _[
        DecodeImage(img_mode="BGR", channel_first=False),
        SARLabelEncode() : ...,
        RobustScannerRecResizeImg(
            image_shape=[3, 48, 48, 160],
            width_downsample_ratio=0.25,
            max_text_length=40,
        ) : RobustScannerRecResizeImg(
            image_shape=[3, 48, 48, 160],
            max_text_length=40,
            width_downsample_ratio=0.25,
        ),
        KeepKeys("image", "label", "valid_ratio", "word_positons") : ...,
    ]
