# This .pyi is auto generated by the script in the root folder.
# only for cache,use .py for changes
from toddleocr.config import _, ConfigModel
from toddleocr.datasets.simple import SimpleDataSet
from toddleocr.loss.ctc import CTCLoss
from toddleocr.metrics.rec import RecMetric
from toddleocr.modules.backbones.mobilenetv3.rec_mobilenet_v3 import MobileNetV3Rec
from toddleocr.modules.heads.ctc import CTCHead
from toddleocr.modules.necks.rnn import SequenceEncoder
from toddleocr.postprocess.rec import CTCLabelDecode
from toddleocr.transforms.label_ops import CTCLabelEncode
from toddleocr.transforms.operators import DecodeImage, KeepKeys
from toddleocr.transforms.rec_img_aug import RecAug, RecResizeImg
from torch.optim import Adam
from torch.optim.lr_scheduler import CosineAnnealingLR

class Model(ConfigModel):
    use_gpu = True
    epoch_num = 500
    log_window_size = 20
    log_batch_step = 10
    save_model_dir = None
    save_epoch_step = 3
    eval_batch_step = [0, 2000]
    metric_during_train = True
    pretrained_model = None
    checkpoints = None
    save_infer_dir = None
    use_visualdl = False
    character_dict_path = None
    character_type = None
    max_text_length = 25
    infer_mode = False
    use_space_char = True
    model_type = "rec"
    algorithm = "CRNN"
    Transform = None
    Backbone = _(
        MobileNetV3Rec, scale=0.5, model_name="small", small_stride=[1, 2, 2, 2]
    )
    Neck = _(SequenceEncoder, encoder_type="rnn", hidden_size=48)
    Head = _(CTCHead, fc_decay=1e-05)
    loss = CTCLoss()
    metric = RecMetric(main_indicator="acc")
    postprocessor = CTCLabelDecode()
    Optimizer = _(Adam, betas=[0.9, 0.999], lr=0.001)
    LRScheduler = _(
        CosineAnnealingLR,
    )

    class Data:
        dataset = SimpleDataSet
        root = "train_data/"
        label_file_list: "train_data/val_list.txt" = "./train_data/train_list.txt"

    class Loader:
        shuffle: False = True
        drop_last: False = True
        batch_size = 256
        num_workers = 8
    Transforms = _[
        DecodeImage(img_mode="BGR", channel_first=False),
        RecAug() :,
        CTCLabelEncode() : ...,
        RecResizeImg(image_shape=[3, 32, 320]),
        KeepKeys("image", "label", "length") : ...,
    ]
