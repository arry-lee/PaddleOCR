# This .py is auto generated by the script in the root folder.
from configs.config import ConfigModel,_
from ppocr.modeling.backbones.table_master_resnet import TableResNetExtra
from ppocr.modeling.heads.table_master_head import TableMasterHead
from ppocr.losses.table_master_loss import TableMasterLoss
from ppocr.metrics.table_metric import TableMetric
from torch.optim import Adam
from torch.nn import MultiStepDecay
from ppocr.postprocess.table_postprocess import TableMasterLabelDecode
from ppocr.data.pubtab_dataset import PubTabDataSet
from ppocr.data.imaug.operators import ToCHWImage, KeepKeys, DecodeImage, NormalizeImage
from ppocr.data.imaug.label_ops import TableMasterLabelEncode, TableBoxEncode
from ppocr.data.imaug.table_ops import ResizeTableImage, PaddingTableImage
class Model(ConfigModel):
    use_gpu = True
    epoch_num = 17
    log_window_size = 20
    log_batch_step = 100
    save_model_dir = "./output/table_master/"
    save_epoch_step = 17
    eval_batch_step = [0, 6259]
    metric_during_train = True
    pretrained_model = None
    checkpoints = None
    save_infer_dir = "output/table_master/infer"
    use_visualdl = False
    infer_img = "ppstructure/docs/table/table.jpg"
    save_res_path = "./output/table_master"
    character_dict_path = "ppocr/utils/dict/table_master_structure_dict.txt"
    infer_mode = False
    max_text_length = 500
    box_format = "xywh"
    model_type = 'table'
    algorithm = 'TableMaster'
    Backbone = _(TableResNetExtra, gcb_config={'ratio': 0.0625, 'headers': 1, 'att_scale': False, 'fusion_type': 'channel_add', 'layers': [False, True, True, True]}, layers=[1, 2, 5, 3])
    Head = _(TableMasterHead, hidden_size=512, headers=8, dropout=0, d_ff=2024, max_text_length=500, loc_reg_num=4)
    loss = TableMasterLoss(ignore_index=42)
    metric = TableMetric(main_indicator="acc", compute_bbox_metric=False, box_format="xywh")
    Optimizer = _(Adam,betas=[0.9, 0.999], lr=0.001)
    LRScheduler = _(MultiStepDecay,milestones=[12, 15], gamma=0.1, warmup_epoch=0.02)
    PostProcessor = _(TableMasterLabelDecode,box_shape="pad", merge_no_span_structure=True)
    class Train:
        Dataset = _(PubTabDataSet, data_dir="train_data/table/pubtabnet/train/", label_file_list=['train_data/table/pubtabnet/PubTabNet_2.0.0_train.jsonl'])
        transforms = _[DecodeImage(img_mode="BGR", channel_first=False), TableMasterLabelEncode(learn_empty_box=False, merge_no_span_structure=True, replace_empty_cell_token=True, loc_reg_num=4, max_text_length=500), ResizeTableImage(max_len=480, resize_bboxes=True), PaddingTableImage(size=[480, 480]), TableBoxEncode(in_box_format="xywh", out_box_format="xywh"), NormalizeImage(scale="1./255.", mean=[0.5, 0.5, 0.5], std=[0.5, 0.5, 0.5], order="hwc"), ToCHWImage(), KeepKeys(keep_keys=['image', 'structure', 'bboxes', 'bbox_masks', 'shape'])]
        DATALOADER = _(shuffle=True, batch_size=10, drop_last=True, num_workers=8)
    class Eval:
        Dataset = _(PubTabDataSet, data_dir="train_data/table/pubtabnet/val/", label_file_list=['train_data/table/pubtabnet/PubTabNet_2.0.0_val.jsonl'])
        transforms = _[DecodeImage(img_mode="BGR", channel_first=False), TableMasterLabelEncode(learn_empty_box=False, merge_no_span_structure=True, replace_empty_cell_token=True, loc_reg_num=4, max_text_length=500), ResizeTableImage(max_len=480, resize_bboxes=True), PaddingTableImage(size=[480, 480]), TableBoxEncode(in_box_format="xywh", out_box_format="xywh"), NormalizeImage(scale="1./255.", mean=[0.5, 0.5, 0.5], std=[0.5, 0.5, 0.5], order="hwc"), ToCHWImage(), KeepKeys(keep_keys=['image', 'structure', 'bboxes', 'bbox_masks', 'shape'])]
        DATALOADER = _(shuffle=False, drop_last=False, batch_size=10, num_workers=8)