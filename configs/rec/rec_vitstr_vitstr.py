# This .py is auto generated by the script in the root folder.
from configs.config import ConfigModel, _
from ppocr.modeling.backbones.rec_vitstr import ViTSTR
from ppocr.modeling.necks.rnn import SequenceEncoder
from ppocr.modeling.heads.rec_ctc_head import CTCHead
from ppocr.losses.rec_ce_loss import CELoss
from ppocr.metrics.rec_metric import RecMetric
from torch.optim import Adadelta
from ppocr.postprocess.rec_postprocess import ViTSTRLabelDecode
from ppocr.data.lmdb_dataset import LMDBDataSet
from ppocr.data.imaug.operators import KeepKeys, DecodeImage
from ppocr.data.imaug.label_ops import ViTSTRLabelEncode
from ppocr.data.imaug.rec_img_aug import GrayRecResizeImg


class Model(ConfigModel):
    use_gpu = True
    epoch_num = 20
    log_window_size = 20
    log_batch_step = 10
    save_model_dir = "./output/rec/vitstr_none_ce/"
    save_epoch_step = 1
    eval_batch_step = [0, 2000]
    metric_during_train = True
    pretrained_model = None
    checkpoints = None
    save_infer_dir = None
    use_visualdl = False
    infer_img = "doc/imgs_words_en/word_10.png"
    character_dict_path = "ppocr/utils/EN_symbol_dict.txt"
    max_text_length = 25
    infer_mode = False
    use_space_char = False
    save_res_path = "./output/rec/predicts_vitstr.txt"
    model_type = "rec"
    algorithm = "ViTSTR"
    in_channels = 1
    Transform = None
    Backbone = _(ViTSTR, scale="tiny")
    Neck = _(SequenceEncoder, encoder_type="reshape")
    Head = _(
        CTCHead,
    )
    loss = CELoss(with_all=True, ignore_index=0)
    metric = RecMetric(main_indicator="acc")
    Optimizer = _(Adadelta, epsilon=1e-08, rho=0.95, clip_norm=5.0, lr=1.0)
    LRScheduler = None
    PostProcessor = _(
        ViTSTRLabelDecode,
    )

    class Train:
        Dataset = _(LMDBDataSet, data_dir="./train_data/data_lmdb_release/training/")
        transforms = _[
            DecodeImage(img_mode="BGR", channel_first=False),
            ViTSTRLabelEncode(ignore_index=0),
            GrayRecResizeImg(image_shape=[224, 224], resize_type="PIL", inter_type="Image.BICUBIC", scale=False),
            KeepKeys(keep_keys=["image", "label", "length"]),
        ]
        DATALOADER = _(shuffle=True, batch_size=48, drop_last=True, num_workers=8)

    class Eval:
        Dataset = _(LMDBDataSet, data_dir="./train_data/data_lmdb_release/evaluation/")
        transforms = _[
            DecodeImage(img_mode="BGR", channel_first=False),
            ViTSTRLabelEncode(ignore_index=0),
            GrayRecResizeImg(image_shape=[224, 224], resize_type="PIL", inter_type="Image.BICUBIC", scale=False),
            KeepKeys(keep_keys=["image", "label", "length"]),
        ]
        DATALOADER = _(shuffle=False, drop_last=False, batch_size=256, num_workers=2)
