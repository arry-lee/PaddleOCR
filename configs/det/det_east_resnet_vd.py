# This .py is auto generated by the script in the root folder.
from configs.config import ConfigModel,_
from ppocr.models.backbones.det_resnet_vd import ResNet_vd
from ppocr.models.necks.east_fpn import EASTFPN
from ppocr.models.heads.det_east_head import EASTHead
from ppocr.losses.det_east_loss import EASTLoss
from ppocr.metrics.det_metric import DetMetric
from torch.optim import Adam
from torch.nn import ContantLR
from ppocr.postprocess.east_postprocess import EASTPostProcess
from ppocr.data.simple_dataset import SimpleDataSet
from ppocr.data.imaug.operators import DecodeImage, KeepKeys, ToCHWImage, DetResizeForTest, NormalizeImage
from ppocr.data.imaug.label_ops import DetLabelEncode
from ppocr.data.imaug.east_process import EASTProcessTrain
class Model(ConfigModel):
    use_gpu = True
    epoch_num = 10000
    log_window_size = 20
    log_batch_step = 2
    save_model_dir = "./output/east_r50_vd/"
    save_epoch_step = 1000
    eval_batch_step = [4000, 5000]
    metric_during_train = False
    pretrained_model = "./pretrain_models/ResNet50_vd_pretrained"
    checkpoints = None
    save_infer_dir = None
    use_visualdl = False
    infer_img = None
    save_res_path = "./output/det_east/predicts_east.txt"
    model_type = 'det'
    algorithm = 'EAST'
    Transform = None
    Backbone = _(ResNet_vd, layers=50)
    Neck = _(EASTFPN, model_name="large")
    Head = _(EASTHead, model_name="large")
    loss = EASTLoss()
    metric = DetMetric(main_indicator="hmean")
    Optimizer = _(Adam,betas=[0.9, 0.999], lr=0.001)
    LRScheduler = _(ContantLR,)
    PostProcessor = _(EASTPostProcess,score_thresh=0.8, cover_thresh=0.1, nms_thresh=0.2)
    class Train:
        Dataset = _(SimpleDataSet, data_dir="./train_data/icdar2015/text_localization/", label_file_list=['./train_data/icdar2015/text_localization/train_icdar2015_label.txt'], ratio_list=[1.0])
        transforms = _[DecodeImage(img_mode="BGR", channel_first=False), DetLabelEncode(), EASTProcessTrain(image_shape=[512, 512], background_ratio=0.125, min_crop_side_ratio=0.1, min_text_size=10), KeepKeys(keep_keys=['image', 'score_map', 'geo_map', 'training_mask'])]
        DATALOADER = _(shuffle=True, drop_last=False, batch_size=8, num_workers=8)
    class Eval:
        Dataset = _(SimpleDataSet, data_dir="./train_data/icdar2015/text_localization/", label_file_list=['./train_data/icdar2015/text_localization/test_icdar2015_label.txt'])
        transforms = _[DecodeImage(img_mode="BGR", channel_first=False), DetLabelEncode(), DetResizeForTest(limit_side_len=2400, limit_type="max"), NormalizeImage(scale="1./255.", mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225], order="hwc"), ToCHWImage(), KeepKeys(keep_keys=['image', 'shape', 'polys', 'ignore_tags'])]
        DATALOADER = _(shuffle=False, drop_last=False, batch_size=1, num_workers=2)
