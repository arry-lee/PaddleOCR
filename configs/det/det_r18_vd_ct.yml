Global:
  use_gpu: true
  epoch_num: 600
  log_smooth_window: 20
  print_batch_step: 10
  save_model_dir: ./output/det_ct/
  save_epoch_step: 10
  # evaluation is run every 2000 iterations
  eval_batch_step: [ 0,1000 ]
  cal_metric_during_train: False
  pretrained_model: ./pretrain_models/ResNet18_vd_pretrained.pdparams
  checkpoints:
  save_inference_dir:
  use_visualdl: False
  infer_img: doc/imgs_en/img623.jpg
  save_res_path: ./output/det_ct/predicts_ct.txt

Model:
  model_type: det
  algorithm: CT
  Transform:
  Backbone:
    class: ResNet_vd
    layers: 18
  Neck:
    class: CTFPN
  Head:
    class: CT_Head
    in_channels: 512
    hidden_dim: 128
    num_classes: 3

Loss:
  class: CTLoss

Optimizer:
  class: Adam
  lr: 0.001

LRScheduler: #PolynomialDecay
  class: Linear
  end_lr: 0.
  epochs: 600
  step_each_epoch: 1254
  power: 0.9

PostProcessor:
  class: CTPostProcess
  box_type: poly

Metric:
  class: CTMetric
  main_indicator: f_score

Train:
  Dataset:
    class: SimpleDataSet
    data_dir: ./train_data/total_text/train
    label_file_list:
      - ./train_data/total_text/train/train.txt
    ratio_list: [ 1.0 ]
    transforms:
      - class: DecodeImage
        img_mode: RGB
        channel_first: False
      - class: CTLabelEncode # Class handling label
      - class: RandomScale
      - class: MakeShrink
      - class: GroupRandomHorizontalFlip
      - class: GroupRandomRotate
      - class: GroupRandomCropPadding
      - class: MakeCentripetalShift
      - class: ColorJitter
        brightness: 0.125
        saturation: 0.5
      - class: ToCHWImage
      - class: NormalizeImage
      - class: KeepKeys
        keep_keys: [ 'image', 'gt_kernel', 'training_mask', 'gt_instance', 'gt_kernel_instance', 'training_mask_distance', 'gt_distance' ] # the order of the dataloader list
  DataLoader:
    shuffle: True
    drop_last: True
    batch_size: 4
    num_workers: 8

Eval:
  Dataset:
    class: SimpleDataSet
    data_dir: ./train_data/total_text/test
    label_file_list:
      - ./train_data/total_text/test/test.txt
    ratio_list: [ 1.0 ]
    transforms:
      - class: DecodeImage
        img_mode: RGB
        channel_first: False
      - class: CTLabelEncode # Class handling label
      - class: ScaleAlignedShort
      - class: NormalizeImage
        order: 'hwc'
      - class: ToCHWImage
      - class: KeepKeys
        keep_keys: [ 'image', 'shape', 'polys', 'texts' ] # the order of the dataloader list
  DataLoader:
    shuffle: False
    drop_last: False
    batch_size: 1
    num_workers: 2
